{"version":3,"sources":["components/Addcategory.js","helpers/geftGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["Addcategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","toUpperCase","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"2MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAEQ,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAkBXG,YAAY,kB,+BC1BnBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCF,EAFnC,8DAGAG,MAAOD,GAHP,cAGbE,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAXvB,kBAkBZK,GAlBY,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOT,EAAW,EAAXA,IAItC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKA,UAAU,YAAf,SACI,kCAAgB,KAAVJ,EAAe,oBAAmBA,EAAMK,cAA9C,SAEJ,qBAAKD,UAAU,eAAf,SACI,qBAAKE,IAAMf,EAAMgB,IAAMP,UCR1BQ,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAGvB,ECHwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAGHH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAMtB,CAAEpB,IAGEqB,EDrB0BK,CAAc1B,GAAlCY,EAAb,EAAQN,KAAac,EAArB,EAAqBA,QAGrB,OACI,qCACI,qBAAIL,UAAU,mBAAd,gCAAsDf,EAAtD,OAAsE,uBAEpEoB,GAAW,mBAAGL,UAAU,kEAAb,2BAEb,qBAAKA,UAAU,YAAf,SACI,6BAGYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,eEY/BiB,EA9BM,WAEjB,MAAoC1C,mBAAS,CAAC,eAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAI7B,6BAEQ4C,EAAWpB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCP5B6B,EAAUC,SAASC,cAAc,SAEvCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.edb38589.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Addcategory = ( { setCategories } ) => {\n    \n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setinputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if( inputValue.trim().length > 2 ){\n            setCategories(cats => [ inputValue,...cats]);\n            setinputValue('');\n        }\n    }\n\n    return (\n        \n            <form onSubmit={ handleSubmit }>  \n                <input \n                    type=\"text\"\n                    value={ inputValue }\n                    onChange={ handleInputChange  }\n                    placeholder='Busca GIFs'\n                />\n            </form>\n        \n    )\n}\n\nAddcategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=5&api_key=wrMHbNUxnP6XcVHFeY9EzNBuATj3Osq1`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n    \n    const gifs = data.map( img => {\n        \n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n\n    });\n\n    //console.log(gifs);\n    //setImages( gifs );\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url } ) => {\n\n    //console.log({id, title, url});\n\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <div className='head-card'>\n                <p> { title === '' ? 'GIF Sin título' : title.toUpperCase() } </p>\n            </div>\n            <div className='content-card'>\n                <img src={ url } alt={ title } />\n            </div>    \n        </div>\n    )\n}","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ( { category } ) => {\n\n    //se renombra en la desestructiración con dos puntos y el nombre nuevo a usar \"data:images\"\n    const { data:images, loading } = useFetchGifs( category );\n    \n    \n    return (\n        <>\n            <h3 className='titulo-categoria'>Mostrando Gifs de: { category } </h3><hr></hr>\n            \n            { loading && <p className='titulo-categoria animate__animated animate__flash animate__slow'> Cargando... </p> }\n\n            <div className='card-grid'>\n                <ol>\n                    \n                        {\n                            images.map( img => (\n                                <GifGridItem \n                                    key={ img.id }\n                                    { ...img }\n                                />\n                            ))\n                        }\n                    \n                    \n                </ol>\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/geftGifs\";\n\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n\n                \n                setState({\n                    data: imgs, \n                    loading: false\n                });\n\n\n            } )\n\n    }, [ category ] );\n\n\n    return state;\n\n}","import React, { useState } from 'react';\nimport { Addcategory } from './components/Addcategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Mario Kart']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <Addcategory setCategories={ setCategories } />\n            \n\n        \n            <ol>\n                { \n                    categories.map( category => (\n                        <GifGrid\n                            key={ category }\n                            category={ category } \n                        />\n                    )) \n                }\n            </ol>\n            \n\n        </>\n    );\n\n\n\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\n\n/*ReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n); */\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render(<GifExpertApp />, divRoot);\n\n"],"sourceRoot":""}